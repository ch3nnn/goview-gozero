// Code generated by goctl. DO NOT EDIT.
// Source: screen.proto

package screen

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"

	"github.com/ch3nnn/goview-gozero/service/screen/pb"
)

// 类型定义
type (
	AddScreenDataReq            = pb.AddScreenDataReq
	AddScreenDataResp           = pb.AddScreenDataResp
	AddScreenProjectReq         = pb.AddScreenProjectReq
	AddScreenProjectResp        = pb.AddScreenProjectResp
	DelScreenProjectReq         = pb.DelScreenProjectReq
	DelScreenProjectResp        = pb.DelScreenProjectResp
	ScreenData                  = pb.ScreenData
	ScreenProject               = pb.ScreenProject
	ScreenProjectFilter         = pb.ScreenProjectFilter
	SelectScreenDataByIdReq     = pb.SelectScreenDataByIdReq
	SelectScreenDataByIdResp    = pb.SelectScreenDataByIdResp
	SelectScreenProjectByIdReq  = pb.SelectScreenProjectByIdReq
	SelectScreenProjectByIdResp = pb.SelectScreenProjectByIdResp
	SelectScreenProjectListReq  = pb.SelectScreenProjectListReq
	SelectScreenProjectListResp = pb.SelectScreenProjectListResp
	UpdateScreenProjectReq      = pb.UpdateScreenProjectReq
	UpdateScreenProjectResp     = pb.UpdateScreenProjectResp

	Screen interface {
		// 创建大屏信息
		InsertScreenProject(ctx context.Context, in *AddScreenProjectReq, opts ...grpc.CallOption) (*AddScreenProjectResp, error)
		// 更新大屏信息
		UpdateScreenProject(ctx context.Context, in *UpdateScreenProjectReq, opts ...grpc.CallOption) (*UpdateScreenProjectResp, error)
		// 根据大屏信息ID删除
		DeleteScreenProject(ctx context.Context, in *DelScreenProjectReq, opts ...grpc.CallOption) (*DelScreenProjectResp, error)
		// 根据大屏信息ID获取详情
		SelectScreenProjectById(ctx context.Context, in *SelectScreenProjectByIdReq, opts ...grpc.CallOption) (*SelectScreenProjectByIdResp, error)
		// 大屏信息列表
		SelectScreenProjectList(ctx context.Context, in *SelectScreenProjectListReq, opts ...grpc.CallOption) (*SelectScreenProjectListResp, error)
		// 创建大屏数据
		InsertScreenData(ctx context.Context, in *AddScreenDataReq, opts ...grpc.CallOption) (*AddScreenDataResp, error)
		// 根据大屏数据ID获取详情
		SelectScreenDataById(ctx context.Context, in *SelectScreenDataByIdReq, opts ...grpc.CallOption) (*SelectScreenDataByIdResp, error)
	}

	defaultScreen struct {
		cli zrpc.Client
	}
)

// NewScreen 新建 Screen 客户端
func NewScreen(cli zrpc.Client) Screen {
	return &defaultScreen{
		cli: cli,
	}
}

// 创建大屏信息
func (m *defaultScreen) InsertScreenProject(ctx context.Context, in *AddScreenProjectReq, opts ...grpc.CallOption) (*AddScreenProjectResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.InsertScreenProject(ctx, in, opts...)
}

// 更新大屏信息
func (m *defaultScreen) UpdateScreenProject(ctx context.Context, in *UpdateScreenProjectReq, opts ...grpc.CallOption) (*UpdateScreenProjectResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.UpdateScreenProject(ctx, in, opts...)
}

// 根据大屏信息ID删除
func (m *defaultScreen) DeleteScreenProject(ctx context.Context, in *DelScreenProjectReq, opts ...grpc.CallOption) (*DelScreenProjectResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.DeleteScreenProject(ctx, in, opts...)
}

// 根据大屏信息ID获取详情
func (m *defaultScreen) SelectScreenProjectById(ctx context.Context, in *SelectScreenProjectByIdReq, opts ...grpc.CallOption) (*SelectScreenProjectByIdResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.SelectScreenProjectById(ctx, in, opts...)
}

// 大屏信息列表
func (m *defaultScreen) SelectScreenProjectList(ctx context.Context, in *SelectScreenProjectListReq, opts ...grpc.CallOption) (*SelectScreenProjectListResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.SelectScreenProjectList(ctx, in, opts...)
}

// 创建大屏数据
func (m *defaultScreen) InsertScreenData(ctx context.Context, in *AddScreenDataReq, opts ...grpc.CallOption) (*AddScreenDataResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.InsertScreenData(ctx, in, opts...)
}

// 根据大屏数据ID获取详情
func (m *defaultScreen) SelectScreenDataById(ctx context.Context, in *SelectScreenDataByIdReq, opts ...grpc.CallOption) (*SelectScreenDataByIdResp, error) {
	client := pb.NewScreenClient(m.cli.Conn())
	return client.SelectScreenDataById(ctx, in, opts...)
}
