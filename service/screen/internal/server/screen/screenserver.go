// Code generated by goctl. DO NOT EDIT.
// Source: screen.proto

package server

import (
	"context"

	"github.com/ch3nnn/goview-gozero/service/screen/internal/logic/screen"
	"github.com/ch3nnn/goview-gozero/service/screen/internal/svc"
	"github.com/ch3nnn/goview-gozero/service/screen/pb"
)

// ScreenServer Screen 服务器结构
type ScreenServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedScreenServer
}

// NewScreenServer 新建 Screen 服务器
func NewScreenServer(svcCtx *svc.ServiceContext) *ScreenServer {
	return &ScreenServer{
		svcCtx: svcCtx,
	}
}

// 创建大屏信息
func (s *ScreenServer) InsertScreenProject(ctx context.Context, in *pb.AddScreenProjectReq) (*pb.AddScreenProjectResp, error) {
	l := screenlogic.NewInsertScreenProjectLogic(ctx, s.svcCtx)
	return l.InsertScreenProject(in)
}

// 更新大屏信息
func (s *ScreenServer) UpdateScreenProject(ctx context.Context, in *pb.UpdateScreenProjectReq) (*pb.UpdateScreenProjectResp, error) {
	l := screenlogic.NewUpdateScreenProjectLogic(ctx, s.svcCtx)
	return l.UpdateScreenProject(in)
}

// 根据大屏信息ID删除
func (s *ScreenServer) DeleteScreenProject(ctx context.Context, in *pb.DelScreenProjectReq) (*pb.DelScreenProjectResp, error) {
	l := screenlogic.NewDeleteScreenProjectLogic(ctx, s.svcCtx)
	return l.DeleteScreenProject(in)
}

// 根据大屏信息ID获取详情
func (s *ScreenServer) SelectScreenProjectById(ctx context.Context, in *pb.SelectScreenProjectByIdReq) (*pb.SelectScreenProjectByIdResp, error) {
	l := screenlogic.NewSelectScreenProjectByIdLogic(ctx, s.svcCtx)
	return l.SelectScreenProjectById(in)
}

// 大屏信息列表
func (s *ScreenServer) SelectScreenProjectList(ctx context.Context, in *pb.SelectScreenProjectListReq) (*pb.SelectScreenProjectListResp, error) {
	l := screenlogic.NewSelectScreenProjectListLogic(ctx, s.svcCtx)
	return l.SelectScreenProjectList(in)
}

// 创建大屏数据
func (s *ScreenServer) InsertScreenData(ctx context.Context, in *pb.AddScreenDataReq) (*pb.AddScreenDataResp, error) {
	l := screenlogic.NewInsertScreenDataLogic(ctx, s.svcCtx)
	return l.InsertScreenData(in)
}

// 根据大屏数据ID获取详情
func (s *ScreenServer) SelectScreenDataById(ctx context.Context, in *pb.SelectScreenDataByIdReq) (*pb.SelectScreenDataByIdResp, error) {
	l := screenlogic.NewSelectScreenDataByIdLogic(ctx, s.svcCtx)
	return l.SelectScreenDataById(in)
}
