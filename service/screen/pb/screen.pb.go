// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: pb/screen.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScreenProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             // ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          // 大屏名称
	State    int64  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`                       // 发布状态(-1 未发布  1 已发布)
	UserId   int64  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 创建用户ID
	IndexImg string `protobuf:"bytes,5,opt,name=index_img,json=indexImg,proto3" json:"index_img,omitempty"`  // 缩略图
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`                      // 备注
	IsDel    bool   `protobuf:"varint,7,opt,name=is_del,json=isDel,proto3" json:"is_del,omitempty"`          // 是否删除(0 未删除 1 已删除)
	CreateAt int64  `protobuf:"varint,8,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` // 创建时间
}

func (x *ScreenProject) Reset() {
	*x = ScreenProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenProject) ProtoMessage() {}

func (x *ScreenProject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenProject.ProtoReflect.Descriptor instead.
func (*ScreenProject) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{0}
}

func (x *ScreenProject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScreenProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScreenProject) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ScreenProject) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ScreenProject) GetIndexImg() string {
	if x != nil {
		return x.IndexImg
	}
	return ""
}

func (x *ScreenProject) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ScreenProject) GetIsDel() bool {
	if x != nil {
		return x.IsDel
	}
	return false
}

func (x *ScreenProject) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type ScreenProjectFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *int64  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`                             // ID
	Name     *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                          // 大屏名称
	State    *int64  `protobuf:"varint,3,opt,name=state,proto3,oneof" json:"state,omitempty"`                       // 发布状态(-1 未发布  1 已发布)
	UserId   *int64  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`       // 创建用户ID
	IndexImg *string `protobuf:"bytes,5,opt,name=index_img,json=indexImg,proto3,oneof" json:"index_img,omitempty"`  // 缩略图
	Remark   *string `protobuf:"bytes,6,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                      // 备注
	IsDel    *bool   `protobuf:"varint,7,opt,name=is_del,json=isDel,proto3,oneof" json:"is_del,omitempty"`          // 是否删除(0 未删除 1 已删除)
	CreateAt *int64  `protobuf:"varint,8,opt,name=create_at,json=createAt,proto3,oneof" json:"create_at,omitempty"` // 创建时间
}

func (x *ScreenProjectFilter) Reset() {
	*x = ScreenProjectFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenProjectFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenProjectFilter) ProtoMessage() {}

func (x *ScreenProjectFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenProjectFilter.ProtoReflect.Descriptor instead.
func (*ScreenProjectFilter) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{1}
}

func (x *ScreenProjectFilter) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ScreenProjectFilter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScreenProjectFilter) GetState() int64 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *ScreenProjectFilter) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ScreenProjectFilter) GetIndexImg() string {
	if x != nil && x.IndexImg != nil {
		return *x.IndexImg
	}
	return ""
}

func (x *ScreenProjectFilter) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *ScreenProjectFilter) GetIsDel() bool {
	if x != nil && x.IsDel != nil {
		return *x.IsDel
	}
	return false
}

func (x *ScreenProjectFilter) GetCreateAt() int64 {
	if x != nil && x.CreateAt != nil {
		return *x.CreateAt
	}
	return 0
}

type AddScreenProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // 大屏名称
	State    int64  `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`                      // 发布状态(-1 未发布  1 已发布)
	UserId   int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 创建用户ID
	IndexImg string `protobuf:"bytes,4,opt,name=index_img,json=indexImg,proto3" json:"index_img,omitempty"` // 缩略图
	Remark   string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                     // 备注
	IsDel    bool   `protobuf:"varint,6,opt,name=is_del,json=isDel,proto3" json:"is_del,omitempty"`         // 是否删除(0 未删除 1 已删除)
}

func (x *AddScreenProjectReq) Reset() {
	*x = AddScreenProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScreenProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScreenProjectReq) ProtoMessage() {}

func (x *AddScreenProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScreenProjectReq.ProtoReflect.Descriptor instead.
func (*AddScreenProjectReq) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{2}
}

func (x *AddScreenProjectReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddScreenProjectReq) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AddScreenProjectReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddScreenProjectReq) GetIndexImg() string {
	if x != nil {
		return x.IndexImg
	}
	return ""
}

func (x *AddScreenProjectReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddScreenProjectReq) GetIsDel() bool {
	if x != nil {
		return x.IsDel
	}
	return false
}

type AddScreenProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddScreenProjectResp) Reset() {
	*x = AddScreenProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScreenProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScreenProjectResp) ProtoMessage() {}

func (x *AddScreenProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScreenProjectResp.ProtoReflect.Descriptor instead.
func (*AddScreenProjectResp) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{3}
}

type UpdateScreenProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  // ID
	Name     *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`                         // 大屏名称
	State    *int64  `protobuf:"varint,3,opt,name=state,proto3,oneof" json:"state,omitempty"`                      // 发布状态(-1 未发布  1 已发布)
	UserId   *int64  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`      // 创建用户ID
	IndexImg *string `protobuf:"bytes,5,opt,name=index_img,json=indexImg,proto3,oneof" json:"index_img,omitempty"` // 缩略图
	Remark   *string `protobuf:"bytes,6,opt,name=remark,proto3,oneof" json:"remark,omitempty"`                     // 备注
	IsDel    *bool   `protobuf:"varint,7,opt,name=is_del,json=isDel,proto3,oneof" json:"is_del,omitempty"`         // 是否删除(0 未删除 1 已删除)
}

func (x *UpdateScreenProjectReq) Reset() {
	*x = UpdateScreenProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScreenProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScreenProjectReq) ProtoMessage() {}

func (x *UpdateScreenProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScreenProjectReq.ProtoReflect.Descriptor instead.
func (*UpdateScreenProjectReq) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateScreenProjectReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScreenProjectReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateScreenProjectReq) GetState() int64 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *UpdateScreenProjectReq) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UpdateScreenProjectReq) GetIndexImg() string {
	if x != nil && x.IndexImg != nil {
		return *x.IndexImg
	}
	return ""
}

func (x *UpdateScreenProjectReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *UpdateScreenProjectReq) GetIsDel() bool {
	if x != nil && x.IsDel != nil {
		return *x.IsDel
	}
	return false
}

type UpdateScreenProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateScreenProjectResp) Reset() {
	*x = UpdateScreenProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScreenProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScreenProjectResp) ProtoMessage() {}

func (x *UpdateScreenProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScreenProjectResp.ProtoReflect.Descriptor instead.
func (*UpdateScreenProjectResp) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{5}
}

type DelScreenProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *DelScreenProjectReq) Reset() {
	*x = DelScreenProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelScreenProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelScreenProjectReq) ProtoMessage() {}

func (x *DelScreenProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelScreenProjectReq.ProtoReflect.Descriptor instead.
func (*DelScreenProjectReq) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{6}
}

func (x *DelScreenProjectReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelScreenProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelScreenProjectResp) Reset() {
	*x = DelScreenProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelScreenProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelScreenProjectResp) ProtoMessage() {}

func (x *DelScreenProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelScreenProjectResp.ProtoReflect.Descriptor instead.
func (*DelScreenProjectResp) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{7}
}

type SelectScreenProjectByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *SelectScreenProjectByIdReq) Reset() {
	*x = SelectScreenProjectByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectScreenProjectByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectScreenProjectByIdReq) ProtoMessage() {}

func (x *SelectScreenProjectByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectScreenProjectByIdReq.ProtoReflect.Descriptor instead.
func (*SelectScreenProjectByIdReq) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{8}
}

func (x *SelectScreenProjectByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SelectScreenProjectByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenProject *ScreenProject `protobuf:"bytes,1,opt,name=screen_project,json=screenProject,proto3" json:"screen_project,omitempty"` // screen_project
}

func (x *SelectScreenProjectByIdResp) Reset() {
	*x = SelectScreenProjectByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectScreenProjectByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectScreenProjectByIdResp) ProtoMessage() {}

func (x *SelectScreenProjectByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectScreenProjectByIdResp.ProtoReflect.Descriptor instead.
func (*SelectScreenProjectByIdResp) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{9}
}

func (x *SelectScreenProjectByIdResp) GetScreenProject() *ScreenProject {
	if x != nil {
		return x.ScreenProject
	}
	return nil
}

type SelectScreenProjectListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int64                `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	Filter   *ScreenProjectFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`                      // ScreenProjectFilter
}

func (x *SelectScreenProjectListReq) Reset() {
	*x = SelectScreenProjectListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectScreenProjectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectScreenProjectListReq) ProtoMessage() {}

func (x *SelectScreenProjectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectScreenProjectListReq.ProtoReflect.Descriptor instead.
func (*SelectScreenProjectListReq) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{10}
}

func (x *SelectScreenProjectListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SelectScreenProjectListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SelectScreenProjectListReq) GetFilter() *ScreenProjectFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SelectScreenProjectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64            `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`                          // 总数
	PageCount int64            `protobuf:"varint,2,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"` // 页码总数
	Results   []*ScreenProject `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`                       // screen_project
}

func (x *SelectScreenProjectListResp) Reset() {
	*x = SelectScreenProjectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_screen_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectScreenProjectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectScreenProjectListResp) ProtoMessage() {}

func (x *SelectScreenProjectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_screen_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectScreenProjectListResp.ProtoReflect.Descriptor instead.
func (*SelectScreenProjectListResp) Descriptor() ([]byte, []int) {
	return file_pb_screen_proto_rawDescGZIP(), []int{11}
}

func (x *SelectScreenProjectListResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SelectScreenProjectListResp) GetPageCount() int64 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *SelectScreenProjectListResp) GetResults() []*ScreenProject {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_pb_screen_proto protoreflect.FileDescriptor

var file_pb_screen_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6d, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xd1, 0x02, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x69, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6d, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x69, 0x6d, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x6d, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x98, 0x02, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x49, 0x6d, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6d, 0x67, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x2c, 0x0a, 0x1a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a,
	0x1b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0e,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x83, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x32, 0xcc, 0x03, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x12, 0x50, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x56, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x17,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x62, 0x0a, 0x17, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x23, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_screen_proto_rawDescOnce sync.Once
	file_pb_screen_proto_rawDescData = file_pb_screen_proto_rawDesc
)

func file_pb_screen_proto_rawDescGZIP() []byte {
	file_pb_screen_proto_rawDescOnce.Do(func() {
		file_pb_screen_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_screen_proto_rawDescData)
	})
	return file_pb_screen_proto_rawDescData
}

var file_pb_screen_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pb_screen_proto_goTypes = []interface{}{
	(*ScreenProject)(nil),               // 0: screen.ScreenProject
	(*ScreenProjectFilter)(nil),         // 1: screen.ScreenProjectFilter
	(*AddScreenProjectReq)(nil),         // 2: screen.AddScreenProjectReq
	(*AddScreenProjectResp)(nil),        // 3: screen.AddScreenProjectResp
	(*UpdateScreenProjectReq)(nil),      // 4: screen.UpdateScreenProjectReq
	(*UpdateScreenProjectResp)(nil),     // 5: screen.UpdateScreenProjectResp
	(*DelScreenProjectReq)(nil),         // 6: screen.DelScreenProjectReq
	(*DelScreenProjectResp)(nil),        // 7: screen.DelScreenProjectResp
	(*SelectScreenProjectByIdReq)(nil),  // 8: screen.SelectScreenProjectByIdReq
	(*SelectScreenProjectByIdResp)(nil), // 9: screen.SelectScreenProjectByIdResp
	(*SelectScreenProjectListReq)(nil),  // 10: screen.SelectScreenProjectListReq
	(*SelectScreenProjectListResp)(nil), // 11: screen.SelectScreenProjectListResp
}
var file_pb_screen_proto_depIdxs = []int32{
	0,  // 0: screen.SelectScreenProjectByIdResp.screen_project:type_name -> screen.ScreenProject
	1,  // 1: screen.SelectScreenProjectListReq.filter:type_name -> screen.ScreenProjectFilter
	0,  // 2: screen.SelectScreenProjectListResp.results:type_name -> screen.ScreenProject
	2,  // 3: screen.Screen.InsertScreenProject:input_type -> screen.AddScreenProjectReq
	4,  // 4: screen.Screen.UpdateScreenProject:input_type -> screen.UpdateScreenProjectReq
	6,  // 5: screen.Screen.DeleteScreenProject:input_type -> screen.DelScreenProjectReq
	8,  // 6: screen.Screen.SelectScreenProjectById:input_type -> screen.SelectScreenProjectByIdReq
	10, // 7: screen.Screen.SelectScreenProjectList:input_type -> screen.SelectScreenProjectListReq
	3,  // 8: screen.Screen.InsertScreenProject:output_type -> screen.AddScreenProjectResp
	5,  // 9: screen.Screen.UpdateScreenProject:output_type -> screen.UpdateScreenProjectResp
	7,  // 10: screen.Screen.DeleteScreenProject:output_type -> screen.DelScreenProjectResp
	9,  // 11: screen.Screen.SelectScreenProjectById:output_type -> screen.SelectScreenProjectByIdResp
	11, // 12: screen.Screen.SelectScreenProjectList:output_type -> screen.SelectScreenProjectListResp
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pb_screen_proto_init() }
func file_pb_screen_proto_init() {
	if File_pb_screen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_screen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenProjectFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScreenProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScreenProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScreenProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScreenProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelScreenProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelScreenProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectScreenProjectByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectScreenProjectByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectScreenProjectListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_screen_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectScreenProjectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_screen_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_pb_screen_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_screen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_screen_proto_goTypes,
		DependencyIndexes: file_pb_screen_proto_depIdxs,
		MessageInfos:      file_pb_screen_proto_msgTypes,
	}.Build()
	File_pb_screen_proto = out.File
	file_pb_screen_proto_rawDesc = nil
	file_pb_screen_proto_goTypes = nil
	file_pb_screen_proto_depIdxs = nil
}
